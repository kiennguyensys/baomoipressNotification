{"version":3,"sources":["contexts/AuthContext.js","constants/api.js","screens/SignIn.js","screens/Panel.js","screens/NotificationCenter.js","screens/NotificationCron.js","components/PrivateRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["authContext","createContext","AuthProvider","children","useState","loading","data","auth","setAuth","useEffect","JSON","parse","window","localStorage","getItem","setItem","stringify","Provider","value","setAuthData","apiUrl","SignIn","history","username","setUsername","password","setPassword","useContext","onFormSubmit","e","a","preventDefault","signInWithUsername","userToken","isAdmin","validateAdminAccess","replace","axios","post","authUrl","then","response","token","catch","err","alert","method","url","headers","roles","style","height","className","width","Form","onSubmit","Group","Label","Control","type","placeholder","onChange","target","Button","variant","Panel","onClick","push","NotificationCenter","title","setTitle","body","setBody","imageURL","setImageURL","slugData","setSlugData","recipientOption","setRecipientOption","singleFCMToken","setSingleFCMToken","gender","setGender","hobby","setHobby","ageRange","setAgeRange","validRecipientsNumber","setValidRecipientsNumber","filterQuery","setFilterQuery","sendingProgress","setSendingProgress","firstUpdate","useRef","useLayoutEffect","current","checkValidRecipients","onChangeRecipientRadio","id","genderQuery","hobbyQuery","ageRangeQuery","queryOrder","toString","split","get","res","console","log","onSendFilterRecipients","batchNumber","promises","pageNumber","all","results","fcmTokensBatch","forEach","chunk","length","fcmTokens","map","item","acf","fcmToken","sendNotifsToServer","tokens","topics","slug","image","marginTop","marginRight","borderStyle","borderWidth","borderRadius","padding","overflow","as","Row","controlId","column","sm","Col","required","rows","marginLeft","Check","label","name","DropdownButton","onSelect","Dropdown","Item","eventKey","marginBottom","ProgressBar","now","NotificationCron","isTaskRunning","setTaskRunning","isServerError","setServerError","checkCronjob","action","message","PrivateRoute","Component","component","rest","render","routeProps","to","App","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.260d4f17.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const authContext = createContext({});\n\nconst AuthProvider = ({ children }) => {\n  const [auth, setAuth] = useState({ loading: true, data: null });\n\n  const setAuthData = (data) => {\n    setAuth({data: data});\n  };\n\n  useEffect(() => {\n    setAuth({ loading: false, data: JSON.parse(window.localStorage.getItem('authData'))});\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('authData', JSON.stringify(auth.data));\n  }, [auth.data]);\n\n  return (\n    <authContext.Provider value={{ auth, setAuthData }}>\n      {children}\n    </authContext.Provider>\n  );\n};\n\nexport default AuthProvider;","export const apiUrl = \"https://app.baomoi.press/wp-json/wp/v2/\"\nexport const acfUrl = \"https://app.baomoi.press/wp-json/acf/v3/\"\nexport const authUrl = \"https://app.baomoi.press/wp-json/jwt-auth/v1/\";","import React, { useState, useContext } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { authContext } from '../contexts/AuthContext';\nimport { apiUrl, authUrl } from '../constants/api.js';\nimport axios from 'axios';\n\n\nconst SignIn = ({history}) => {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const { setAuthData } = useContext(authContext);\n\n  const onFormSubmit = async(e) => {\n    e.preventDefault();\n\n    const userToken = await signInWithUsername();\n    let isAdmin = null;\n    if(userToken) isAdmin = await validateAdminAccess(userToken);\n\n    if(isAdmin) {\n        setAuthData({ username })\n        history.replace('/')\n    }\n  };\n\n  const signInWithUsername = () => {\n      return axios.post(authUrl + 'token', {\n          username: username,\n          password: password,\n      })\n          .then((response) => {\n              const userToken = response.data.token\n              return userToken\n         })\n          .catch((err) => {\n              alert(\"Username or password is invalid!\")\n              return undefined\n          });\n  }\n\n  const validateAdminAccess = (userToken) => {\n      return axios({\n          method: \"GET\",\n          url: apiUrl + 'current_user',\n          headers: {'Authorization': 'Bearer ' + userToken},\n      })\n          .then((response) => {\n              const role = response.data.roles[0]\n              if(role === 'administrator') return true\n\n              alert(\"You are not allowed to access\")\n              return false\n         })\n          .catch((err) => {\n              return false\n          });\n  }\n\n  return (\n    <div\n      style={{ height: \"100vh\" }}\n      className=\"d-flex justify-content-center align-items-center\"\n    >\n      <div style={{ width: 400 }}>\n        <h2 className=\"text-center\">Báo mới Press Notification</h2>\n        <h4 className=\"text-center\">Đăng nhập</h4>\n        <Form onSubmit={onFormSubmit}>\n          <Form.Group>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Enter username\"\n              onChange={e => {\n                setUsername(e.target.value);\n              }}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={e => {\n                setPassword(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            className=\"w-100 mt-3\"\n          >\n            Sign In as Admin\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;","import React, { useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { authContext } from \"../contexts/AuthContext\";\n\nconst Panel = ({history}) => {\n  const { setAuthData, auth } = useContext(authContext);\n\n  const onLogOut = () => {\n    setAuthData(null);\n  }\n\n  const switchToNotificationCenter = () => {\n      history.push('/notification-sender')\n  }\n\n  const switchToNotificationCron = () => {\n      history.push('/notification-cron')\n  }\n\n  return (\n    <div\n      style={{ height: \"100vh\" }}\n      className=\"d-flex justify-content-center align-items-center\"\n    >\n      <div style={{ width: 300 }}>\n        <h1 className=\"text-center\"> {`Hello, ${auth.data.username}`} </h1>\n        <Button\n          variant=\"primary\"\n          type=\"button\"\n          className=\"w-100 mt-3\"\n          onClick={switchToNotificationCenter}\n        >\n          Gửi thông báo\n        </Button>\n\n        <Button\n          variant=\"primary\"\n          type=\"button\"\n          className=\"w-100 mt-3\"\n          onClick={switchToNotificationCron}\n        >\n          Cron thông báo\n        </Button>\n\n        <Button\n          variant=\"primary\"\n          type=\"button\"\n          className=\"w-100 mt-5\"\n          onClick={onLogOut}\n        >\n          Log out\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Panel;","import React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport {\n    Dropdown,\n    DropdownButton,\n    Form,\n    Row,\n    Col,\n    Button,\n    ProgressBar\n} from 'react-bootstrap';\nimport axios from 'axios';\nimport { apiUrl } from '../constants/api';\n\nconst NotificationCenter = () => {\n    const [title, setTitle] = useState()\n    const [body, setBody] = useState()\n    const [imageURL, setImageURL] = useState()\n    const [slugData, setSlugData] = useState()\n\n    const [recipientOption, setRecipientOption] = useState()\n    const [singleFCMToken, setSingleFCMToken] = useState()\n    const [gender, setGender] = useState()\n    const [hobby, setHobby] = useState()\n    const [ageRange, setAgeRange] = useState()\n    const [validRecipientsNumber, setValidRecipientsNumber] = useState(0)\n    const [filterQuery, setFilterQuery] = useState()\n    const [sendingProgress, setSendingProgress] = useState(0)\n\n    const firstUpdate = useRef(true);\n\n    useLayoutEffect(() => {\n        if (firstUpdate.current) {\n            firstUpdate.current = false;\n            return;\n        }\n        checkValidRecipients()\n    }, [hobby, gender, ageRange]);\n\n    const onChangeRecipientRadio = (e) => {\n        setRecipientOption(e.target.id)\n    }\n\n    const checkValidRecipients = () => {\n        const generalQuery = apiUrl + \"users?per_page=1\"\n        let genderQuery = \"\"\n        let hobbyQuery = \"\"\n        let ageRangeQuery = \"\"\n        let queryOrder = 0\n\n        if(gender) {\n            genderQuery = \"&filter[meta_query][\" + queryOrder + \"][key]=gender&filter[meta_query][\" + queryOrder + \"][value]=\" + gender.toString()\n            queryOrder++\n        }\n\n        if(hobby) {\n            hobbyQuery = \"&filter[meta_query][\" + queryOrder + \"][key]=so_thich&filter[meta_query][\" + queryOrder + \"][value]=\" + hobby.toString()\n            queryOrder++\n        }\n\n        if(ageRange) {\n            ageRangeQuery = \"&filter[meta_query][\" + queryOrder + \"][key]=age&filter[meta_query][\" + queryOrder + \"][value]=\" + ageRange.split(\"-\")[0] + \"&filter[meta_query][\" + queryOrder + \"][compare]=>\"\n            queryOrder++\n            ageRangeQuery = ageRangeQuery + \"&filter[meta_query][\" + queryOrder + \"][key]=age&filter[meta_query][\" + queryOrder + \"][value]=\" + ageRange.split(\"-\")[1] + \"&filter[meta_query][\" + queryOrder + \"][compare]=<=\"\n        }\n\n        //set query for later API calling\n        setFilterQuery(genderQuery + hobbyQuery + ageRangeQuery)\n\n        axios.get(generalQuery + genderQuery + hobbyQuery + ageRangeQuery)\n        .then(res => {\n            setValidRecipientsNumber(res.headers[\"x-wp-total\"])\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    const onSendSingleRecipient = (e) => {\n        e.preventDefault()\n        sendNotifsToServer([singleFCMToken])\n    }\n\n    const onSendFilterRecipients = async(e) => {\n        e.preventDefault()\n\n        if(validRecipientsNumber){\n            for (var batchNumber = 0; batchNumber <= validRecipientsNumber/1000 ; batchNumber++) {\n                let promises = [];\n\n                for (var pageNumber = batchNumber * 10 + 1; pageNumber <= batchNumber * 10 + 10 ; pageNumber++) {\n                    const url = apiUrl + \"users?per_page=100&page=\" + pageNumber.toString() + filterQuery\n                    promises.push(axios.get(url))\n                }\n\n                await axios.all(promises).then(results => {\n                    let fcmTokensBatch = []\n                    results.forEach(chunk => {\n                        if(chunk.data.length) {\n                            let fcmTokens = chunk.data.map(item => item.acf.fcmToken)\n                            fcmTokensBatch = [...fcmTokensBatch, ...fcmTokens]\n                        }\n                    })\n                    setSendingProgress((batchNumber + 1) / (validRecipientsNumber/1000 + 1) * 100)\n\n                    sendNotifsToServer(fcmTokensBatch)\n                });\n            }\n        }\n    }\n\n    const onSendAllRecipients = (e) => {\n        e.preventDefault()\n        sendNotifsToServer([], \"news\")\n    }\n\n    const sendNotifsToServer = (tokens, topics) => {\n        console.log(title)\n        axios.post(\"/fcm-sender\", {\n            title: title,\n            body: body,\n            slug: slugData || \"\",\n            image: imageURL || \"\",\n            tokens: tokens.toString(),\n            topics: topics || \"\",\n        })\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    return(\n        <div\n          style={{ height: \"100vh\", marginTop: 10 }}\n          className=\"d-flex flex-row justify-content-center align-items-center\"\n        >\n            <div\n                style={{ height: 350, width: 320, marginRight: 20, borderStyle:\"ridge\" ,borderWidth: 1, borderRadius: 10, padding: 20, overflow: 'scroll' }}\n            >\n                <Form>\n                  <Form.Group as={Row} controlId=\"formTitle\">\n                    <Form.Label column sm={2}>\n                      Title\n                    </Form.Label>\n                    <Col sm={10}>\n                      <Form.Control required type=\"text\" placeholder=\"Title\" onChange={e => setTitle(e.target.value)} />\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBody\">\n                    <Form.Label>Body</Form.Label>\n                    <Form.Control required as=\"textarea\" rows=\"3\" placeholder=\"Body\" onChange={e => setBody(e.target.value)} />\n                  </Form.Group>\n\n                  <Form.Group as={Row} controlId=\"formImageURL\">\n                    <Form.Label column sm={2}>\n                      Image\n                    </Form.Label>\n                    <Col sm={10}>\n                      <Form.Control type=\"text\" placeholder=\"Image Url(not required)\" onChange={e => setImageURL(e.target.value)} />\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row} controlId=\"formSlugData\">\n                    <Form.Label column sm={2}>\n                      Slug\n                    </Form.Label>\n                    <Col sm={10}>\n                      <Form.Control type=\"text\" placeholder=\"Slug Data(not required)\" onChange={e => setSlugData(e.target.value)} />\n                    </Col>\n                  </Form.Group>\n                </Form>\n            </div>\n            <div\n                style={{ height: 350, width: 320, marginLeft: 20, borderStyle:\"ridge\" ,borderWidth: 1, borderRadius: 10, padding: 20, overflow: 'scroll' }}\n            >\n                <fieldset>\n                  <Form.Group as={Row}>\n                    <Form.Label as=\"legend\" column sm={2}>\n                      Gửi theo\n                    </Form.Label>\n                    <Col sm={10}>\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"Một đối tượng\"\n                        name=\"recipientOption\"\n                        id=\"singleRecipient\"\n                        onChange={onChangeRecipientRadio}\n                      />\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"Nhóm đối tượng\"\n                        name=\"recipientOption\"\n                        id=\"filterRecipients\"\n                        onChange={onChangeRecipientRadio}\n                      />\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"Tất cả\"\n                        name=\"recipientOption\"\n                        id=\"allRecipients\"\n                        onChange={onChangeRecipientRadio}\n                      />\n                    </Col>\n                  </Form.Group>\n                </fieldset>\n\n                {recipientOption === 'singleRecipient' &&\n                    <Form onSubmit={onSendSingleRecipient}>\n                        <Form.Group as={Row} controlId=\"formFCMToken\">\n                          <Form.Label column sm={2}>\n                            Token\n                          </Form.Label>\n                          <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"FCM Token\" onChange={e => setSingleFCMToken(e.target.value)} />\n                          </Col>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Send!\n                         </Button>\n                    </Form>\n                }\n\n                {recipientOption === 'filterRecipients' &&\n                <div\n                   className=\"d-flex flex-row justify-content-space-between align-items-start\"\n                 >\n                    <div\n                        style={{ marginRight: 10 }}\n                    >\n                        <DropdownButton\n                          id=\"dropdown-hobby\"\n                          title=\"Lọc sở thích\"\n                          onSelect={e => setHobby(e)}\n                        >\n                          <Dropdown.Item eventKey=\"Cà phê\">Cà phê</Dropdown.Item>\n                          <Dropdown.Item eventKey=\"Nghe nhạc\">Nghe nhạc</Dropdown.Item>\n                          <Dropdown.Item eventKey=\"Xem phim\">Xem phim</Dropdown.Item>\n                          <Dropdown.Item eventKey=\"Đá bóng\">Đá bóng</Dropdown.Item>\n                        </DropdownButton>\n\n                        <DropdownButton\n                          id=\"dropdown-gender\"\n                          style={{ marginTop: 10 }}\n                          title=\"Lọc giới tính\"\n                          onSelect={e => setGender(e)}\n                        >\n                          <Dropdown.Item eventKey=\"Nam\">Nam</Dropdown.Item>\n                          <Dropdown.Item eventKey=\"Nữ\">Nữ</Dropdown.Item>\n                        </DropdownButton>\n\n                        <DropdownButton\n                          id=\"dropdown-ageRange\"\n                          style={{ marginTop: 10, marginBottom: 10 }}\n                          title=\"Lọc độ tuổi\"\n                          onSelect={e => setAgeRange(e)}\n                        >\n                          <Dropdown.Item eventKey=\"0-25\">0-25</Dropdown.Item>\n                          <Dropdown.Item eventKey=\"25-40\">25-40</Dropdown.Item>\n                          <Dropdown.Item eventKey=\"40-55\">40-55</Dropdown.Item>\n                          <Dropdown.Item eventKey=\"55-99\">>55-99</Dropdown.Item>\n                        </DropdownButton>\n\n                        <Button variant=\"primary\"\n                            onClick={e => {\n                                setHobby(null)\n                                setGender(null)\n                                setAgeRange(null)\n                                setSendingProgress(0)\n                            }}\n                        >\n                            Huỷ lọc\n                        </Button>\n                    </div>\n                    <div\n                        style={{ marginLeft: 10 }}\n                    >\n                        <h6> {validRecipientsNumber} valid users </h6>\n                        <p>\n                            {hobby && <em> có sở thích: {hobby} <br/></em> }\n\n                            {gender && <em> có giới tính: {gender} <br/></em> }\n                            {ageRange && <em> có độ tuổi: {ageRange} </em> }\n                        </p>\n                        <ProgressBar now={sendingProgress} />\n\n                        {!sendingProgress &&\n                        <Button variant=\"primary\" onClick={onSendFilterRecipients} style={{ marginTop: 10 }}>\n                            Send!\n                        </Button>\n                        }\n                    </div>\n                </div>\n                }\n\n                {recipientOption === 'allRecipients' &&\n                    <Button variant=\"primary\" onClick={onSendAllRecipients}>\n                        Send all!\n                    </Button>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default NotificationCenter;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from 'axios';\n\nconst NotificationCron = ({history}) => {\n  const [isTaskRunning, setTaskRunning] = useState(false)\n  const [isServerError, setServerError] = useState(false)\n\n  const checkCronjob = () => {\n      axios.post('/fcm-cron', {\n          action: \"checkRunningTask\"\n      })\n      .then(res => {\n          const message = res.data\n          if(message === \"scheduled\") {\n              setTaskRunning(true)\n          }\n\n          if(message === \"destroyed\" || message === \"null\") {\n              setTaskRunning(false)\n          }\n      })\n      .catch(err => {\n          console.log(err)\n          setServerError(true)\n      })\n  }\n\n  useEffect(() => {\n      checkCronjob()\n  }, []);\n\n  const startCronjob = (e) => {\n      e.preventDefault()\n      axios.post('/fcm-cron', {\n          action: \"start\"\n      })\n      .then(res => checkCronjob())\n      .catch(err => console.log(err))\n  }\n\n  const destroyCronjob = (e) => {\n      e.preventDefault()\n      axios.post('/fcm-cron', {\n          action: \"destroy\"\n      })\n      .then(res => checkCronjob())\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div\n      style={{ height: \"100vh\" }}\n      className=\"d-flex justify-content-center align-items-center\"\n    >\n      <div style={{ width: 300 }}>\n        <h1 className=\"text-center\"> {`Cron Center`} </h1>\n        <h6 className=\"text-center\"> {`Cron latest post every 4 hours`} </h6>\n        {!isServerError &&\n        <div>\n            {!isTaskRunning &&\n            <Button\n              variant=\"primary\"\n              type=\"button\"\n              className=\"w-100 mt-3\"\n              onClick={startCronjob}\n            >\n              Start\n            </Button>\n            }\n\n            {isTaskRunning &&\n            <Button\n              variant=\"primary\"\n              type=\"button\"\n              className=\"w-100 mt-3\"\n              onClick={destroyCronjob}\n            >\n              STOP\n            </Button>\n            }\n        </div>\n        }\n\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationCron;","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authContext } from '../contexts/AuthContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { auth } = useContext(authContext);\n  const { loading } = auth;\n\n  if (loading) {\n    return (\n      <Route\n        {...rest}\n        render={() => {\n          return <p>Loading...</p>;\n        }}\n      />\n    );\n  }\n// if loading is set to true (when our function useEffect(() => {}, []) is not executed), we are rendering a loading component;\n\n  return (\n    <Route\n      {...rest}\n      render={routeProps => {\n        return auth.data ? (\n          <Component {...routeProps} />\n        ) : (\n          <Redirect to=\"/sign-in\" />\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Switch, BrowserRouter, Route } from 'react-router-dom';\nimport SignIn from './screens/SignIn';\nimport Panel from './screens/Panel';\nimport NotificationCenter from './screens/NotificationCenter';\nimport NotificationCron from './screens/NotificationCron';\nimport PrivateRoute from './components/PrivateRoute';\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                  <Route path=\"/sign-in\" component={SignIn} />\n                  <PrivateRoute path=\"/notification-cron\" component={NotificationCron} />\n                  <PrivateRoute path=\"/notification-sender\" component={NotificationCenter} />\n                  <PrivateRoute path=\"/\" component={Panel} />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AuthProvider from './contexts/AuthContext';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  (\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  ),\n  document.getElementById('root'),\n);\nregisterServiceWorker();\n"],"sourceRoot":""}